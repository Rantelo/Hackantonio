#
# Autogenerated by Thrift Compiler (1.0.0-dev)
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#

require 'thrift'

module Response
  SUCCESS = 1
  FAILURE = 2
  NO_NEED = 3
  NOT_FOUND = 4
  VALUE_MAP = {1 => "SUCCESS", 2 => "FAILURE", 3 => "NO_NEED", 4 => "NOT_FOUND"}
  VALID_VALUES = Set.new([SUCCESS, FAILURE, NO_NEED, NOT_FOUND]).freeze
end

module Command
  ON = 1
  OFF = 2
  VALUE_MAP = {1 => "ON", 2 => "OFF"}
  VALID_VALUES = Set.new([ON, OFF]).freeze
end

class Device
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  IP = 2
  NAME = 3

  FIELDS = {
    ID => {:type => ::Thrift::Types::I32, :name => 'id'},
    IP => {:type => ::Thrift::Types::STRING, :name => 'ip'},
    NAME => {:type => ::Thrift::Types::STRING, :name => 'name'}
  }

  def struct_fields; FIELDS; end

  def validate
  end

  ::Thrift::Struct.generate_accessors self
end

class Action
  include ::Thrift::Struct, ::Thrift::Struct_Union
  ID = 1
  DEVICE_ID = 2
  COMMAND = 3
  DATE_TIME = 4

  FIELDS = {
    ID => {:type => ::Thrift::Types::I32, :name => 'id'},
    DEVICE_ID => {:type => ::Thrift::Types::I32, :name => 'device_id'},
    COMMAND => {:type => ::Thrift::Types::I32, :name => 'command', :enum_class => ::Command},
    DATE_TIME => {:type => ::Thrift::Types::STRING, :name => 'date_time'}
  }

  def struct_fields; FIELDS; end

  def validate
    unless @command.nil? || ::Command::VALID_VALUES.include?(@command)
      raise ::Thrift::ProtocolException.new(::Thrift::ProtocolException::UNKNOWN, 'Invalid value of field command!')
    end
  end

  ::Thrift::Struct.generate_accessors self
end

